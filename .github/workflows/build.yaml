name: Build application

permissions: write-all

# If another commit is pushed, abort this run and focus on new commit
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

# Run automation only when a Pull Request is created/ready for main
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
  push:
    branches:
      - 'main'

jobs:
  # testWithCoverage:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
      
  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         cache: true

  #     - name: Install lcov
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get -y install lcov
          
  #     - name: Install dependencies
  #       run: flutter pub get

  #     - name: Analyze Flutter
  #       uses: zgosalvez/github-actions-analyze-dart@v3
  #       with:
  #         fail-on-warnings: true

  #     - name: Run tests
  #       run: flutter test --no-pub --coverage

  #     - name: Report code coverage
  #       uses: zgosalvez/github-actions-report-lcov@v4
  #       with:
  #         coverage-files: coverage/lcov.info
  #         minimum-coverage: 90
  #         artifact-name: code-coverage-report
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         update-comment: true

  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v4
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build Android
    needs: version
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
        id: java
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build flutter APK
        run: flutter build apk
      
      - name: Upload to Github
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
